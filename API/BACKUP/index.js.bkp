const express = require('express');
const server = express();
const bodyParser = require('body-parser');
const fs = require('fs');
const mysql = require('mysql');

const usuarios = [];

server.use(bodyParser.urlencoded({extended: true}));
server.use(bodyParser.json());


// criando o post
server.post('/usuarios', (req, res) => {
    const usuario = req.body;
    usuarios.push(usuario);
    res.send('Dados gravados com sucesso!');

    const jsonData = JSON.stringify(usuario);
    const nomeArquivo = 'login.json';
    // escreve no json
    fs.writeFile(nomeArquivo, jsonData, (err) => {
        if (err) {
          console.error('Erro ao escrever no arquivo:', err);
          return;
        }
        console.log('Arquivo JSON gravado com sucesso!');
      });
      
      // enviando para o BD
      fs.readFile(nomeArquivo, 'utf8', (err, jsonString) => {
        if (err) {
          console.error('Erro ao ler o arquivo:', err);
          return;
        }
      
        // Converta a string JSON em um objeto JavaScript
        const jsonData = JSON.parse(jsonString);
      
        // Conecte-se ao banco de dados MySQL
        const connection = mysql.createConnection({
          host: 'localhost',
          user: 'root',
          password: '0220',
          database: 'node_mysql_crud_db'
        });
      
        connection.query('INSERT INTO login SET ?', jsonData, (err, results) => {
          if (err) {
            console.error('Erro ao gravar no banco de dados:', err);
            return;
          }
      
          console.log('Dados gravados com sucesso no MySQL!');
          connection.end(); // Encerre a conexão com o banco de dados
        });
    });
});




// fazendo o get
server.get('/usuarios/:login/:pass', (req, res) => {
        // Conecte-se ao banco de dados MySQL
        const connection = mysql.createConnection({
            host: 'localhost',
            user: 'root',
            password: '0220',
            database: 'node_mysql_crud_db'
          });
          const query = 'SELECT * FROM login';

            connection.query(query, (err, results) => {
            if (err) {
                console.error('Erro ao executar a consulta:', err);
                connection.end();
                return;
            }

            // Converte os resultados em uma string JSON
            const jsonString = JSON.stringify(results);
            const nomeArquivo = 'login.json';

            // Grava a string JSON em um arquivo
            fs.writeFile(nomeArquivo, jsonString, 'utf8', (err) => {
                if (err) {
                console.error('Erro ao gravar o arquivo:', err);
                return;
                }
                console.log('Resultados gravados com sucesso em resultados.json');
            });

            connection.end(); // Encerra a conexão com o banco de dados
            });
          
        const jsonString = fs.readFileSync('./login.json', 'utf8');
        const jsonData = JSON.parse(jsonString);
        const usuario = jsonData.find(user => req.params.login === user.login && req.params.pass === user.pass);
        console.log(usuario)
        if(usuario){res.send(usuario);}
        else {
            // Bloco de captura de exceção
            res.send('Usuário não encontrado');
          }
});

//fazendo o put
server.put('/usuarios/:id', (req, res) => {
    const index = usuarios.findIndex(user=>user.id === ~~req.params.id);
    const usuario = req.body;
    usuarios.splice(index, 1, usuario);
    res.send(usuario);

});

//fazendo o delete
server.delete('/usuarios/:id', (req, res) => {
const index = usuarios.findIndex(user=>user.id === ~~req.params.id);
const usuario = req.body;
usuarios.splice(index, 1);
res.send({mensagem: "Usuário deletado"});
});

server.listen(3000, () => {
    console.log('Example app listening on port',3000)
})